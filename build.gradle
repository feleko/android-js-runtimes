// Simplified group for JitPack (com.github.<user>) so artifacts become com.github.feleko:<module>:1.0.1
// Root coordinates
group 'com.github.feleko'
version '1.0.5'

buildscript {
    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
    }
}

allprojects {
    group = rootProject.group
    version = rootProject.version
    repositories {
        google()
        mavenCentral()
    }
}



subprojects {
    tasks.withType(Test){
        enabled = false
    }

    apply plugin: 'com.android.library'

    apply plugin: 'maven-publish'

    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        if (this.hasProperty('kotlin')) {
            kotlin { jvmToolchain(11) }
        }


    compileSdkVersion 30
        defaultConfig {
            minSdkVersion 21
        }
        lintOptions {
            disable 'InvalidPackage'
        }

        testOptions {
            unitTests.all { enabled false }
        }
    }

    // Standard release publication for JitPack
    plugins.withId('maven-publish') {
        afterEvaluate { prj ->
            if (prj.components.findByName('release')) {
                publishing {
                    publications {
                        release(MavenPublication) {
                            from prj.components.release
                            groupId = prj.group
                            artifactId = prj.name
                            version = prj.version
                        }
                    }
                    repositories { mavenLocal() }
                }
                // Ensure fat-aar output is built before publishing (if plugin present)
                if (prj.tasks.findByName('reBundleAarRelease')) {
                    if (prj.tasks.findByName('publishReleasePublicationToMavenLocal')) {
                        prj.tasks.named('publishReleasePublicationToMavenLocal') { dependsOn prj.tasks.named('reBundleAarRelease') }
                    }
                    if (prj.tasks.findByName('generateMetadataFileForReleasePublication')) {
                        prj.tasks.named('generateMetadataFileForReleasePublication') { dependsOn prj.tasks.named('reBundleAarRelease') }
                    }
                }
            }
        }
    }


}
